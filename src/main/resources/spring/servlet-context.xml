<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- uses WebJars so Javascript and CSS libs can be declared as Maven dependencies (Bootstrap, jQuery...) -->
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>

	
    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <beans:property name="contentNegotiationManager" ref="cnManager"/>

        <beans:property name="viewResolvers">
            <beans:list>
                <!-- Default viewClass: JSTL view (JSP with html output) -->
                <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <!-- Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
                    <beans:property name="prefix" value="/WEB-INF/views/"/>
                    <beans:property name="suffix" value=".jsp"/>
                </beans:bean>

				
                <!-- Used here for 'xml' and 'atom' views  -->
                <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
            </beans:list>
        </beans:property>
    </beans:bean>
    

    <!-- Simple strategy: only path extension is taken into account -->
    <beans:bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <beans:property name="favorPathExtension" value="true"/>
        <beans:property name="ignoreAcceptHeader" value="true"/>
        <beans:property name="defaultContentType" value="text/html"/>

        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="html" value="text/html" />
                <beans:entry key="json" value="application/json" />
                <beans:entry key="xml" value="application/xml" />
                <beans:entry key="atom" value="application/atom+xml" />
                <beans:entry key="rss" value="application/rss+xml"/>
            </beans:map>
        </beans:property>
    </beans:bean>

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<!-- Imports user-defined @Controller beans that process client requests -->
	
	<!-- Maps '/' requests to the 'home' view -->
	<mvc:view-controller path="/" view-name="index" />
	
    <!-- serve static resources (*.html, ...) from src/main/webapp/ -->
    <mvc:default-servlet-handler/>
	
	<!-- scan Controller -->
	<context:component-scan base-package="com.wx.serveplatform.**.controller" >
    </context:component-scan>
    
    <mvc:annotation-driven/>
	
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!-- view name resolved using bean of type InternalResourceViewResolver (declared in mvc-view-config.xml) -->
        <property name="defaultErrorView" value="exception"/>
        <!-- results into 'WEB-INF/jsp/exception.jsp' -->
        <property name="warnLogCategory" value="warn"/>
        <!-- needed otherwise exceptions won't be logged anywhere -->
    </bean>
	
</beans:beans>