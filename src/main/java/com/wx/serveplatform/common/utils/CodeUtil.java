/**
 * <p>Title: CodeUtil.java</p>
 * <p>编码</p>
 * @author damon
 * @date 2014年12月3日
 * @version 1.0
 */
package com.wx.serveplatform.common.utils;

import java.text.DecimalFormat;
import java.util.Random;

/**
 * <p>Title: CodeUtil</p>
 * <p>编码</p> 
 * @author damon
 * @date 2014年12月3日
 */
public class CodeUtil {
	
	//-- -------- -------- -------- ------- -------- --//
	//--			自定义纯数字验证码
	//-- -------- -------- -------- ------- -------- --//
	/**
	 * <p>validate</p>
	 * <p>短信 6位验证码</p>
	 * @author damon
	 * @date 2014年12月3日
	 * @return
	 */
	public static String validate() {
		int[] nums = new int[6];
		// 生成随机数
		Random random = new Random();
		// 验证码
		String validate_code = "";
		for(int i = 0; i < nums.length; i++){
			nums[i] = random.nextInt(9);
			validate_code = validate_code + nums[i];
		}
		return validate_code;
	}
	
	/**
	 * <p>cutDigit</p>
	 * <p>保留三位小数</p>
	 * @author damon
	 * @date 2015年1月13日
	 * @param param
	 * @return
	 */
	public static double cutDigit(double param) {
		DecimalFormat df = new DecimalFormat("######0.000"); 
		return Double.parseDouble(df.format(param));
	}
	
	//-- -------- -------- -------- ------- -------- --//
	//--			自定义随机数列算法
	//-- -------- -------- -------- ------- -------- --//
	/**
	 * <p>random 抽奖</p>
	 * <p>从已知数列中随机取数</p>
	 * @author damon
	 * @date 2015年1月30日
	 * @param nos 
	 * @return
	 */
	public static String random(String[] nos) {
		String no = "";
		// 生成随机数 0~9
		Random random = new Random();
		// 行列式
		// 列 初始化10列
		int x = 10;
		// 如果是 N * 10 矩阵
		if(nos.length % x == 0){
			// 行 根据传入数列数目而定
			int y = nos.length / x;
			// 随机取 第 j+1行i+1列的数据
			int j = random.nextInt(y);
			int i = random.nextInt(9);
			no = nos[j * 10 + i];
//			System.out.println((j+1)+""+(i+1));
		// 数列非 N * 10 矩阵
		} else {
			// 行 根据传入数列数目而定
			int y = nos.length / x + 1;
			int k = nos.length % x;
			// 随机取 第 j+1行i+1列的数据
			int j = random.nextInt(y);
			int i = random.nextInt(k);
			no = nos[j * 10 + i];
//			System.out.println((j+1)+""+(i+1));
		}
		return no;
	}
	
	public static void main(String[] args) {
//		String str = "";
//		for(int i = 0; i < 100; i++) {
//			if(i % 10 == 0){
//				str = "";
//				str += "\"" + CodeUtil.validate() + "\"";
//			}
//			if(i < 99){
//				str += ",";
//			}
//			if(i % 10 == 9){
//				System.out.println(str);
//			}
//			str += "\"" + CodeUtil.validate() + "\"";
//		}
		
////		// N * 10 矩阵
////		String[] nos = {
////				"831700","830250","021854","367064","385447","757032","362821","882255","288252","035340",
////				"248865","327325","046561","534214","553684","360747","663668","855623","662861","265316",
////				"270278","730525","602483","052648","824684","401247","286551","234565","604840","841002",
////				"836831","367647","487122","250815","565565","825288","876786","740655","486287","651533",
////				"144823","508068","676710","646726","064274","723813","305062","808842","280700","445380",
////				"071307","238354","288586","176835","308264","344261","330580","785421","012462","804786",
////				"403333","246636","466234","474736","548368","511522","524764","811561","106682","238247",
////				"515775","860531","804670","201024","486525","210167","827527","204188","013436","437218",
////				"581573","485550","831384","685713","654285","765125","210864","644888","614610","423037",
////				"626577","418203","280658","035226","846223","742352","605810","621261","480547","358507"
////		};
//		
//		// 非 N * 10 矩阵
//		String[] nos = {
//				"831700","830250","021854","367064","385447","757032","362821","882255","288252","035340",
//				"248865","327325","046561","534214","553684","360747","663668","855623","662861","265316",
//				"270278","730525","602483","052648","824684","401247","286551","234565","604840","841002",
//				"836831","367647","487122","250815","565565","825288","876786","740655","486287","651533",
//				"144823","508068","676710","646726","064274","723813","305062","808842","280700","445380",
//				"071307","238354","288586","176835","308264","344261","330580","785421","012462","804786",
//				"403333","246636","466234","474736"
//		};
//		for(int i = 0; i < 10000; i++) {
//			System.out.println(i+1);
//			System.out.println(CodeUtil.random(nos));
//		}
		
	}
}
